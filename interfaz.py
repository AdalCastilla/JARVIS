# -*- coding: utf-8 -*-
"""Interfaz.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CSlsePzxSwKDpgD5vK44idvJshdiNqPE
"""

!pip install gTTS gradio

import gradio as gr
from gtts import gTTS
import numpy as np
import pickle
import tensorflow as tf
import os

# Cargar modelo y vectorizador
model = tf.keras.models.load_model("/content/sentiment_model.h5")
with open("/content/tfidf_vectorizer.pkl", "rb") as f:
    vectorizer = pickle.load(f)

# FunciÃ³n principal de JARVIS
def jarvis_responder(texto):
    # Procesar el texto
    texto_vectorizado = vectorizer.transform([texto]).toarray()
    prediccion = model.predict(texto_vectorizado)[0][0]

    if prediccion > 0.5:
        respuesta = "I detect a positive sentiment. Good job, sir."
    else:
        respuesta = "I sense some negativity. Are you okay?"

    # Generar voz
    tts = gTTS(respuesta, lang='en')
    tts.save("jarvis_audio.mp3")

    return respuesta, "jarvis_audio.mp3"

# Interfaz Gradio
iface = gr.Interface(
    fn=jarvis_responder,
    inputs=gr.Textbox(label="What do you want to tell JARVIS?"),
    outputs=[
        gr.Textbox(label="JARVIS says:"),
        gr.Audio(label="Voice Output")
    ],
    title="JARVIS Sentiment Analyzer"
)

iface.launch()